- Structs:
    - For each geometry type, there is a struct that represents it.
    - Camera
    - Light
    - Material (Bonus)
    - Array of objects

- Scene:
    - Contains all the objects in the scene.
    - Contains the camera and the light.
    - Contains the background color.
    - Contains the ambient light.
    - Contains the number of objects in the scene.
    - Contains the number of lights in the scene.
    - Contains the number of materials in the scene (Bonus).

- Ray:
    - Contains the origin of the ray.
    - Contains the direction of the ray.

- Intersection:
    - Contains the intersection point.
    - Contains the normal at the intersection point.
    - Contains the object that was intersected.
    - Contains the distance from the ray origin to the intersection point.

- Color:
    - Contains the red component.
    - Contains the green component.
    - Contains the blue component.

- Point3D:
    - Contains the x component.
    - Contains the y component.
    - Contains the z component.

- Vector3D:
    - Contains the x component.
    - Contains the y component.
    - Contains the z component.

- Code loop
    - For each pixel in the image:
        - Compute the ray from the camera to the pixel.
        - For each object in the scene:
            - Compute the intersection between the ray and the object.
            - If the intersection exists:
                - Compute the color of the pixel.
                - Break the loop.
        - If no intersection was found:
            - Set the color of the pixel to the background color.
    - Save the image to a file.

- Bonus
    - Full Phong shading
    - Checkerboard texture
    - Multiple lights
    - Another geometry type (e.g. Hyperboloid)
    - Handle bump mapping